---
// No server-side logic needed for this component
---

<div class="theme-switch">
  <label for="theme-select" class="sr-only">Choose theme</label>
  <select
    id="theme-select"
    class="block w-auto px-3 py-2 text-sm bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900 dark:text-gray-100 transition-colors mr-0"
    aria-label="Select theme"
  >
    <option value="light">Light</option>
    <option value="dark">Dark</option>
    <option value="auto">Auto</option>
  </select>
</div>

<script is:inline>
  // Theme switching functionality
  (function() {
    function getStoredTheme() {
      if (typeof localStorage !== 'undefined') {
        return localStorage.getItem('theme') || 'auto';
      }
      return 'auto';
    }
    
    function setStoredTheme(theme) {
      if (typeof localStorage !== 'undefined') {
        localStorage.setItem('theme', theme);
      }
    }
    
    function getSystemTheme() {
      if (typeof window !== 'undefined' && window.matchMedia) {
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      }
      return 'light';
    }
    
    function applyTheme(theme) {
      const root = document.documentElement;
      const actualTheme = theme === 'auto' ? getSystemTheme() : theme;
      
      if (actualTheme === 'dark') {
        root.classList.add('dark');
      } else {
        root.classList.remove('dark');
      }
      
      // Update select if it exists
      const select = document.getElementById('theme-select');
      if (select) {
        select.value = theme;
      }
    }
    
    // Initialize theme immediately
    const storedTheme = getStoredTheme();
    applyTheme(storedTheme);
    
    // Set up event listeners when DOM is ready
    function initializeThemeSwitch() {
      const select = document.getElementById('theme-select');
      if (select) {
        select.addEventListener('change', function(e) {
          const newTheme = e.target.value;
          setStoredTheme(newTheme);
          applyTheme(newTheme);
        });
        
        // Set initial value
        select.value = storedTheme;
      }
      
      // Listen for system theme changes
      if (typeof window !== 'undefined' && window.matchMedia) {
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function() {
          const currentTheme = getStoredTheme();
          if (currentTheme === 'auto') {
            applyTheme('auto');
          }
        });
      }
    }
    
    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initializeThemeSwitch);
    } else {
      initializeThemeSwitch();
    }
  })();
</script>