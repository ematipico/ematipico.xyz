---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title} description={post.data.description}>
  <article class="max-w-3xl mx-auto">
    <!-- Header -->
    <header class="mb-8 space-y-4">
      <div class="text-center space-y-2">
        <time class="text-sm text-gray-500" datetime={post.data.pubDate.toISOString()}>
          {post.data.pubDate.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
          })}
        </time>
        <h1 class="text-3xl sm:text-4xl font-bold text-gray-900 leading-tight">
          {post.data.title}
        </h1>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
          {post.data.description}
        </p>
      </div>
      
      {post.data.heroImage && (
        <div class="mt-8">
          <img
            src={post.data.heroImage}
            alt={post.data.title}
            class="w-full h-64 sm:h-80 object-cover rounded-lg shadow-lg"
          />
        </div>
      )}
    </header>

    <!-- Content -->
    <div class="prose max-w-none">
      <Content />
    </div>

    <!-- Navigation -->
    <nav class="mt-12 pt-8 border-t border-gray-200">
      <a 
        href="/blog"
        class="inline-flex items-center text-blue-600 hover:text-blue-800 transition-colors"
      >
        ‚Üê Back to blog
      </a>
    </nav>
  </article>
</Layout>

<style>
  /* Custom prose styles for better typography */
  .prose {
    color: rgb(55 65 81);
    line-height: 1.625;
  }
  
  .prose h1 {
    font-size: 1.875rem;
    font-weight: 700;
    color: rgb(17 24 39);
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .prose h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: rgb(17 24 39);
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  .prose h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: rgb(17 24 39);
    margin-top: 1.25rem;
    margin-bottom: 0.5rem;
  }
  
  .prose p {
    margin-bottom: 1rem;
  }
  
  .prose a {
    color: rgb(37 99 235);
    transition-property: color;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }
  
  .prose a:hover {
    color: rgb(29 78 216);
  }
  
  .prose code {
    background-color: rgb(243 244 246);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    font-family: ui-monospace, SFMono-Regular, "SF Mono", Consolas, "Liberation Mono", Menlo, monospace;
  }
  
  .prose pre {
    background-color: rgb(17 24 39);
    color: rgb(243 244 246);
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
  }
  
  .prose pre code {
    background-color: transparent;
    padding: 0;
  }
  
  .prose blockquote {
    border-left: 4px solid rgb(59 130 246);
    padding-left: 1rem;
    font-style: italic;
    color: rgb(75 85 99);
  }
  
  .prose ul, .prose ol {
    margin-bottom: 1rem;
    margin-left: 1.5rem;
  }
  
  .prose li {
    margin-bottom: 0.5rem;
  }
  
  .prose img {
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  }
</style>